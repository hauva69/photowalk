#!/usr/bin/python

'''
FIXME: Write the program documentation.
'''

import ao.av.exifdst
import ao.av.resize
import ao.av.rotate

import Image

import errno
import os
import shutil
import sys

def help():
    '''Help for each command.'''
    # FIXME: I need more help!
    prog = sys.argv[0]
    try:
        cmd = sys.argv[2]
    except IndexError:
        print(__doc__)
        sys.exit(0)
    if cmd == 'resize':
        help_resize(prog)
        sys.exit(0)

def help_resize(prog):
    '''Help for command resize.'''
    msg = '%s resize from_directory to_directory' % prog
    print(msg)

def init():
    nefdn = 'orig_nef'
    jpgdn = 'orig_jpg'
    try:
        os.mkdir(nefdn)
    except OSError, ex:
        if ex.errno == errno.EEXIST:
            pass
        else:
            raise ex
    try:
        os.mkdir(jpgdn)
    except OSError, ex:
        if ex.errno == errno.EEXIST:
            pass
        else:
            raise ex
    for i in os.listdir('.'):
        fn = i.lower()
        if fn.endswith('.nef'):
            fn = '%s/%s' % (nefdn, fn)
        elif fn.endswith('.jpg'):
            fn = '%s/%s' % (jpgdn, fn)
        shutil.move(i, fn)

def dist(origdn, treedn):
    '''Copies files from origdn to treedn/YYYY/MM/DD.'''
    try:
        ao.av.exifdst.exifdst(origdn, treedn)
    except OSError, ex:
        msg = '%s\n' % str(ex)
        sys.stderr.write(msg)
        sys.exit(2)

def cand(jpgdn, canddn):
    '''Hard links all *.jpg files from jpgdn to canddn.'''
    try:
        os.mkdir(canddn)
    except OSError, ex:
        if ex.errno == errno.EEXIST:
            pass
        else:
            raise ex
    for i in os.listdir(jpgdn):
        fn = '%s/%s' % (jpgdn, i)
        tofn = '%s/%s' % (canddn, i)
        os.link(fn, tofn)

def rawcand(canddn, rawdn, todn):
    '''Takes all files from canddn and hard links the corresponding RAW
files from rawdn to todn.'''
    try:
        os.mkdir(todn)
    except OSError, ex:
        if errno.EEXIST == ex.errno:
            pass
        else:
            raise ex
    for i in os.listdir(canddn):
        rawfn = '%s/%s' % (rawdn, i.replace('.jpg', '.nef'))
        tmp = '%s/%s' % (todn, i.replace('.jpg', '.nef'))
        if not os.path.exists(tmp):
            os.link(rawfn, tmp)

def resize(frmdn, todn, size=2048):
    if not os.path.exists(todn):
        os.mkdir(todn)
    for i in os.listdir(frmdn):
        frm = '%s/%s' % (frmdn, i)
        to = '%s/%s' % (todn, i)
        im = Image.open(frm)
        im = ao.av.rotate.rotate(im, frm)
        ao.av.resize.scale(im, size)
        im.save(to)

def main():
    try:
        cmd = sys.argv[1]
    except IndexError:
        help()
        sys.exit(1)
    if cmd == 'init':
        init()
    elif cmd == 'cand':
        cand(sys.argv[2], sys.argv[3])
    elif cmd == 'rawcand':
        rawcand(sys.argv[2], sys.argv[3], sys.argv[4])
    elif cmd == 'dist':
        dist(sys.argv[2], sys.argv[3])
    elif cmd == 'resize':
        frmdn = sys.argv[2]
        todn = sys.argv[3]
        resize(frmdn, todn)
    elif cmd == 'help':
        help()

if __name__ == '__main__':
    main()

